{"version":3,"sources":["components/commons/LinkBtn.js","components/Header/Header.js","components/Menu/ButtonGroup.js","components/Menu/LvlScore.js","components/commons/ActionButton.js","components/Menu/Menu.js","components/Game/Card.js","components/Game/Game.js","components/Game/WinPopup.js","components/Game/GamePlaceholder.js","components/Footer/Footer.js","containers/App.js","serviceWorker.js","index.js"],"names":["linkBtn","props","react_default","a","createElement","className","href","address","children","header","LinkBtn","buttonGroup","classText","scoreList","lvlScroe","_ref","gameScore","last","top","actionButton","pressedClass","gameStarted","gameLvl","level","disabled","locked","onClick","e","click","title","style","fontSize","description","menu","lvlButtonClick","gameProgress","buttonsArray","des","lvl","text","map","button","index","ActionButton","key","headerText","Fragment","id","Menu_ButtonGroup","Menu_LvlScore","card","size","isReversed","cardIcon","cardColor","cardClick","containerStyle","width","height","cardStyle","backgroundColor","iconStyle","cardClasses","config","reverseIcon","Game","state","_this2","this","cardsGird","cardsObj","cardData","Game_Card","cardSize","isMatched","icon","concat","gridStyle","newGame","display","gridTemplateColumns","repeat","lvlSize","x","gridGap","gameWidth","cardColors","Math","floor","random","length","Component","winPopup","clickCounter","isNewRecord","replayClick","nextLvlClick","cancelClick","gamePlaceholder","placeholderContent","isWin","WinPopup","footer","App","isNewGame","reversedCards","matchedCouples","gameAreaWidth","gameAreaStyle","buttonLocker","randomIcons","lvlRangeSize","newCardsObj","cardsIds","iconsList","Object","toConsumableArray","icons","i","push","iconId","splice","endGameHandler","score","console","log","_this","setState","Storage","localStorage","setItem","JSON","stringify","cardClickHandler","modifiedCardObj","isFailure","lvlRange","setTimeout","reverseAllCards","startNewGame","replyClickHandler","cancelClickHandler","reverseTime","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","lvlButtonClickHanlder","window","innerHeight","innerWidth","savedProgress","getItem","savedGameScore","parse","gameContent","gameInfo","components_Game_Game","GamePlaceholder","Header_Header","Menu_Menu","Footer_Footer","Boolean","location","hostname","match","ReactDOM","render","src_containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.efd52343.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Buttons.scss'\r\n\r\nconst linkBtn = (props) => {\r\n    return (\r\n        <div className=\"Button\"><a href={props.address}><div className=\"header-btn\">{props.children}</div></a></div>\r\n    )\r\n}\r\n\r\nexport default linkBtn","import React from 'react';\r\nimport './Header.scss';\r\nimport LinkBtn from '../commons/LinkBtn';\r\n\r\nconst header = () => {\r\n    return (\r\n    <div className=\"Header\">\r\n        <h1>Memory game</h1>\r\n        <h2>with Font Awesome</h2>\r\n        <LinkBtn address='#Menu'><i className=\"far fa-play-circle\"></i> Start fun!</LinkBtn>\r\n        <div className=\"scale\"><a className=\"link\" href=\"https://fontawesome.com\">Learn more</a></div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default header","import React from 'react';\r\nimport './ButtonGroup.scss'\r\n\r\nconst buttonGroup = (props) => {\r\n    let classText = \"ButtonGroup\";\r\n    if (props.scoreList) {\r\n        classText+=\" scoreList\";\r\n    }\r\n\r\n    return (\r\n        <div className={classText}>\r\n            <h3>{props.header}</h3>\r\n            <div className=\"Buttons-row\">{props.children}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default buttonGroup","import React from 'react';\r\nimport './LvlScore.scss'\r\n\r\nconst lvlScroe = ({ gameScore }) => {\r\n\r\n    return (\r\n        <div className=\"LvlScore\">\r\n            <p>Last: </p><p><b>{gameScore.last}</b></p>\r\n            <p>Top: </p><p><b>{gameScore.top}</b></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default lvlScroe;","import React from 'react';\r\nimport './Buttons.scss'\r\n\r\nconst actionButton = (props) => {\r\n\r\n    let outputText = () => {\r\n        if (!props.locked) {\r\n            return (\r\n                <div className=\"ScrollableContent\">\r\n                    <span>{props.children}</span>\r\n                    <span style={{ fontSize: \"16px\" }}>{props.description}</span>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"Locked\">\r\n                    <i className=\"fas fa-lock\"></i>\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    let pressedClass = '';\r\n    if (props.gameStarted && props.gameLvl === props.level) {\r\n        pressedClass = \"buttonPressed\";\r\n    }\r\n\r\n    return (\r\n        <button className={\"ActionButton \" + pressedClass} disabled={props.locked} onClick={(e) => { props.click(props.level, e)}} title={props.title}>\r\n            <a href={\"#Game\"}>{outputText()}</a>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default actionButton;\r\n","import React from 'react';\r\nimport './Menu.scss'\r\nimport ButtonGroup from './ButtonGroup';\r\nimport LvlScore from './LvlScore';\r\nimport ActionButton from '../commons/ActionButton';\r\n\r\nconst menu = ({ lvlButtonClick, gameScore, gameProgress, gameLvl, gameStarted }) => {\r\n\r\n    const buttonsData = [{ des: \"Easy\", lvl: 0, text: \"1\" }, { des: \"Medium\", lvl: 1, text: \"2\" }, { des: \"Hard\", lvl: 2, text: \"3\" }, { des: \"Nightmare\", lvl: 3, text: <i className=\"far fa-dizzy\"></i> }];\r\n    const buttonsArray = buttonsData.map((button, index) => {\r\n        return (\r\n            <ActionButton\r\n                key={index}\r\n                description={button.des}\r\n                click={lvlButtonClick}\r\n                gameLvl={gameLvl}\r\n                gameStarted={gameStarted}\r\n                level={button.lvl}\r\n                locked={button.lvl <= gameProgress ? false : true}>\r\n                {button.text}\r\n            </ActionButton>\r\n        )\r\n    })\r\n    let headerText = <>Your score (clicks)</>\r\n    if (gameLvl === 3) {\r\n        headerText = <>Your score (matches)</>\r\n    }\r\n\r\n    return (\r\n        <div id=\"Menu\" className=\"Menu\">\r\n            <div className=\"wrapper\">\r\n                <ButtonGroup header=\"Choose level\">\r\n                    {buttonsArray}\r\n                </ButtonGroup >\r\n                <ButtonGroup header={headerText} scoreList={true}>\r\n                    <LvlScore gameLvl={gameLvl} gameScore={gameScore} />\r\n                </ButtonGroup>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default menu","import React from 'react';\r\nimport './Card.scss'\r\nimport config from '../../config/config.json'\r\n\r\nconst card = ({ size, isReversed, cardIcon, cardColor, id, cardClick}) => {\r\n\r\n    const containerStyle = {\r\n        width: size,\r\n        height: size,\r\n    };\r\n    const cardStyle = {\r\n        backgroundColor: cardColor\r\n    };\r\n\r\n    const iconStyle = {\r\n        fontSize: 0.55 * size\r\n    };\r\n\r\n    let cardClasses = \"Card\";\r\n    if (isReversed) {\r\n        cardClasses += \" flipped\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"cardContainer\" style={containerStyle} onClick={(e)=>cardClick(id, e)}>\r\n            <div className={cardClasses}>\r\n                <div className=\"front\" style={cardStyle}><i className={\"fas fa-\" + cardIcon} style={iconStyle}></i></div>\r\n                <div className=\"back\" style={cardStyle}><i className={\"fas fa-\" + config.reverseIcon} style={iconStyle}></i></div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default card","import React, { Component } from 'react';\r\nimport './Game.scss'\r\nimport Card from \"./Card\";\r\nimport config from '../../config/config.json'\r\n\r\nclass Game extends Component {\r\n    state={};\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.newGame) {\r\n            return {\r\n                gridStyle: {\r\n                    height: '100%',\r\n                    width: '100%',\r\n                    display: 'grid',\r\n                    gridTemplateColumns: 'auto '.repeat(props.lvlSize.x),\r\n                    gridGap: '10px'\r\n                },\r\n                cardSize: (props.gameWidth - 10 * (props.lvlSize.x - 1)) / props.lvlSize.x,\r\n                cardColor: config.cardColors[Math.floor(Math.random() * config.cardColors.length)]\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    render() {\r\n        const cardsGird = this.props.cardsObj.map((cardData, index) => {\r\n            return <Card size={this.state.cardSize} isReversed={cardData.isReversed} isMatched={cardData.isMatched} cardIcon={cardData.icon} cardColor={this.state.cardColor} key={`${this.props.lvl}-${index}`} id={index} cardClick={this.props.cardClick} />\r\n        });\r\n        return (\r\n            <div id=\"Game\" className=\"Game\">\r\n                <div className=\"wrapper\" style={this.state.gridStyle}>\r\n                    {cardsGird}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game","import React from 'react';\r\nimport './Game.scss'\r\nimport ActionButton from '../commons/ActionButton';\r\n\r\nconst winPopup = (props) => {\r\n\r\n    return (\r\n        <div className=\"WinPopup\">\r\n            <div>\r\n                <p>Winner!</p>\r\n                <p>{`Score: ${props.clickCounter} clicks`}</p>\r\n                {props.isNewRecord ? <p><strong>New Record!</strong></p> : null\r\n                }\r\n            </div>\r\n            <div className=\"winButtons\">\r\n                <ActionButton\r\n                    description=\"Reply\"\r\n                    click={props.replayClick}\r\n                    level=\"0\">\r\n                    <i className=\"fas fa-undo-alt\"></i>\r\n                </ActionButton>\r\n                {/* don't show next level button when it's last level */}\r\n                {props.lvl < 3 ? (\r\n                    <ActionButton\r\n                        description=\"Next level\"\r\n                        click={props.nextLvlClick}\r\n                        level={props.lvl + 1}>\r\n                        <i className=\"fas fa-arrow-right\"></i>\r\n                    </ActionButton>\r\n                ) : null}\r\n                <ActionButton\r\n                    description=\"Cancel\"\r\n                    click={props.cancelClick}\r\n                    level=\"0\">\r\n                    <i className=\"fas fa-times\"></i>\r\n                </ActionButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default winPopup","import React from 'react';\r\nimport './Game.scss';\r\nimport WinPopup from \"./WinPopup\";\r\n\r\nconst gamePlaceholder = (props) => {\r\n    let placeholderContent;\r\n    if (props.isWin) {\r\n        placeholderContent = <WinPopup clickCounter={props.clickCounter} replayClick={props.replayClick} cancelClick={props.cancelClick} lvl={props.lvl} isNewRecord={props.isNewRecord} nextLvlClick = {props.nextLvlClick}/>\r\n    }\r\n    else {\r\n        placeholderContent = (\r\n            <div>\r\n                <p className=\"main\">Choose level to start a game!</p>\r\n                <p>Win a given level to unlock the next one.</p>\r\n                <p>Pass three levels to unlock <b>Nigthmare</b> mode, <br /> where mistakes are not allowed.</p>\r\n                <p>Good luck, have fun! <i className=\"far fa-smile-wink\"></i></p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div id=\"Game\" className=\"GamePlaceholder\" >\r\n            {placeholderContent}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default gamePlaceholder","import React from 'react';\r\nimport './Footer.scss'\r\n\r\nconst footer = (props) => {\r\n\r\n    return (\r\n        <div className=\"Footer\">\r\n            <p>React practice game project, by JZ.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default footer","import React, { Component } from 'react';\nimport './App.scss';\nimport Header from '../components/Header/Header';\nimport Menu from '../components/Menu/Menu';\nimport Game from '../components/Game/Game';\nimport GamePlaceholder from '../components/Game/GamePlaceholder';\nimport Footer from '../components/Footer/Footer';\nimport config from '../config/config.json'\n\n\nclass App extends Component {\n\n  state = {\n    gameStarted: false,\n    cardsObj: [],\n    lvl: 0,\n    isNewGame: false,\n    reversedCards: [],\n    matchedCouples: 0,\n    isWin: false,\n    isNewRecord: false,\n    clickCounter: 0,\n    gameAreaWidth: 0,\n    gameAreaStyle: {},\n    gameScore: [{ last: 0, top: 0 }, { last: 0, top: 0 }, { last: 0, top: 0 }, { last: 0, top: 0 }],\n    gameProgress: 0\n  }\n\n  buttonLocker = false;\n\n  randomIcons = (lvlRangeSize) => {\n    let newCardsObj = []; //Object with whole lvl cards data\n    let cardsIds = []; //Array of indexes for cards in game\n    let iconsList = [...config.icons]; //Copy of default icons set\n\n    for (let i = 0; i < (lvlRangeSize); i++) {\n      cardsIds.push(i); // creates array of indexes for set game range\n      newCardsObj.push(i); // creates a placeholder of cards data\n    }\n    let index;\n    while (cardsIds.length > 0) {\n      const iconId = Math.floor(Math.random() * iconsList.length);\n      const icon = iconsList.splice(iconId, 1)[0];\n\n      index = cardsIds.splice(Math.floor(Math.random() * cardsIds.length), 1)[0];\n      // select index for 1st card of couple with same icon and removes it from list\n      newCardsObj[index] = {\n        icon: icon,\n        isReversed: false,\n      };\n\n      index = cardsIds.splice(Math.floor(Math.random() * cardsIds.length), 1);\n      // select index for 2nd card of couple with same icon and removes it from list\n      newCardsObj[index] = {\n        icon: icon,\n        isReversed: false,\n      };\n\n    }\n    return newCardsObj;\n  }\n\n  endGameHandler = (score) => {\n    console.log(\"engGame\")\n    let gameScore = [...this.state.gameScore];\n    let gameProgress = this.state.gameProgress;\n    let isNewRecord = false;\n    gameScore[this.state.lvl].last = score\n    // new Record\n    if (this.state.lvl < 3 && gameScore[this.state.lvl].top > 0 && score < gameScore[this.state.lvl].top) {\n      gameScore[this.state.lvl].top = score;\n      isNewRecord = true;\n    }\n    else if (gameScore[this.state.lvl].top === 0) {\n      gameScore[this.state.lvl].top = score;\n      isNewRecord = true;\n    }\n    else if (this.state.lvl === 3 && gameScore[this.state.lvl].top > 0 && score > gameScore[this.state.lvl].top) {\n      gameScore[this.state.lvl].top = score;\n      isNewRecord = true;\n    }\n    // progress made\n    if (gameProgress < 4 && this.state.lvl === gameProgress) {\n      gameProgress++;\n    }\n    // save progress\n    this.setState({ gameScore: gameScore, gameProgress: gameProgress, isNewRecord: isNewRecord })\n    if (typeof (Storage) !== \"undefined\") {\n      localStorage.setItem('gameScore', JSON.stringify(this.state.gameScore));\n      localStorage.setItem('gameProgress', gameProgress);\n    }\n  }\n\n  cardClickHandler = (index) => {\n\n    if (!this.buttonLocker && this.state.cardsObj[index].isReversed) {\n      this.buttonLocker = true;\n\n      let reversedCards = [...this.state.reversedCards];\n      let modifiedCardObj = [...this.state.cardsObj];\n      let matchedCouples = this.state.matchedCouples;\n      let isWin = this.state.isWin;\n      let clickCounter = this.state.clickCounter;\n      let isFailure = false;\n      modifiedCardObj[index].isReversed = false;\n      clickCounter++;\n\n      if (reversedCards.length === 0) {\n        reversedCards[0] = index;\n      }\n      else {\n        reversedCards[1] = index;\n        // checks if there is a match\n        if (modifiedCardObj[index].icon === modifiedCardObj[reversedCards[0]].icon) {\n          reversedCards = [];\n          matchedCouples++;\n          // Checks if we won the game!\n          if (matchedCouples === config.lvlRange[this.state.lvl].size / 2) {\n            isWin = true;\n            this.endGameHandler(clickCounter);\n          }\n        }\n        // in case of fail\n        else {\n          // if not nightmare\n          if (this.state.lvl !== 3) {\n\n            setTimeout(() => {\n              modifiedCardObj[reversedCards[0]].isReversed = true;\n              modifiedCardObj[reversedCards[1]].isReversed = true;\n              reversedCards = [];\n              this.setState({ cardsObj: modifiedCardObj, reversedCards: reversedCards })\n              this.buttonLocker = false;\n            }, 600);\n          }\n          else {\n            this.endGameHandler(matchedCouples);\n            isFailure = true;\n          }\n        }\n      }\n\n      this.setState({ cardsObj: modifiedCardObj, reversedCards: reversedCards, isNewGame: false, matchedCouples: matchedCouples, isWin: isWin, clickCounter: clickCounter }, () => {\n        // when failder in nightmare mode\n        if (isFailure) {\n          setTimeout(() => {\n            this.reverseAllCards();\n            setTimeout(() => {\n              this.startNewGame(this.state.lvl);\n              this.buttonLocker = false;\n            }, 600);\n          }, 600);\n        }\n        else if (reversedCards.length < 2) {\n          this.buttonLocker = false;\n        }\n      })\n    }\n  }\n\n  replyClickHandler = () => {\n    this.startNewGame(this.state.lvl);\n  }\n\n  cancelClickHandler = () => {\n    this.setState({ gameStarted: false, isWin: false });\n  }\n\n  startNewGame = (lvl) => {\n    let lvlRangeSize = config.lvlRange[lvl].size;\n    const newCardsObj = this.randomIcons(lvlRangeSize);\n    this.setState({\n      gameStarted: true,\n      cardsObj: newCardsObj,\n      lvl: lvl,\n      isNewGame: true,\n      isWin: false,\n      clickCounter: 0,\n      matchedCouples: 0,\n      reversedCards: []\n    }, () => {\n      setTimeout(() => {\n        this.reverseAllCards();\n      }, config.reverseTime[lvl])\n    });\n  }\n\n  reverseAllCards = () => {\n    let modifiedCardObj = [...this.state.cardsObj];\n    for (const cardObj of modifiedCardObj) {\n      cardObj.isReversed = true;\n    }\n    this.setState({ cardsObj: modifiedCardObj, isNewGame: false });\n  }\n\n  lvlButtonClickHanlder = (lvl) => {\n    if (!this.state.gameStarted || lvl !== this.state.lvl) {\n      this.startNewGame(lvl);\n    }\n  }\n\n  componentDidMount() {\n    let height = window.innerHeight - 150 - 32;\n    let width = height * 1.66;\n\n    if (window.innerWidth < 768) {\n      width = window.innerWidth*0.96;\n      height = width/1.66;\n    }\n\n    this.setState({\n      gameAreaWidth: width,\n      gameAreaStyle: {\n        height: height + 'px',\n        // width: width + 'px',\n      }\n    });\n    const savedProgress = localStorage.getItem('gameProgress');\n    const savedGameScore = JSON.parse(localStorage.getItem('gameScore'));\n    if (savedProgress && savedGameScore) {\n      this.setState({\n        gameScore: savedGameScore,\n        gameProgress: savedProgress\n      })\n    }\n  }\n\n  render() {\n    let gameContent = null;\n    let gameInfo = null;\n\n    if (this.state.gameStarted) {\n      gameContent =\n        <Game lvlSize={config.lvlRange[this.state.lvl]} lvl={this.state.lvl} cardsObj={this.state.cardsObj} cardClick={(key, e) => this.cardClickHandler(key, e)} newGame={this.state.isNewGame} gameWidth={this.state.gameAreaWidth} />\n    }\n    if (!this.state.gameStarted || this.state.isWin) {\n      gameInfo = <GamePlaceholder isWin={this.state.isWin} isNewRecord={this.state.isNewRecord} clickCounter={this.state.clickCounter} replayClick={this.replyClickHandler} cancelClick={this.cancelClickHandler} lvl={this.state.lvl} nextLvlClick={(lvl, e) => this.lvlButtonClickHanlder(lvl, e)} />;\n    }\n\n    return (\n      <div className=\"App\">\n        <Header />\n        <Menu gameLvl={this.state.lvl} gameStarted={this.state.gameStarted} gameProgress={this.state.gameProgress} lvlButtonClick={(lvl, e) => this.lvlButtonClickHanlder(lvl, e)} gameScore={this.state.gameScore[this.state.lvl]} />\n        <div id=\"Game\" className=\"gameArea\" style={this.state.gameAreaStyle}>\n          {gameContent}\n          {gameInfo}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}