{"version":3,"sources":["components/Buttons/LinkBtn.js","components/Header/Header.js","components/Menu/ButtonGroup/ButtonGroup.js","components/Menu/LvlScore/LvlScore.js","components/Buttons/ActionBtn.js","components/Buttons/ArrowBtn.js","components/Menu/Menu.js","components/Game/Card/Card.js","components/Game/GameLives/GameLives.js","containers/Game/Game.js","components/Game/Placeholder/Placeholder.js","components/Game/Popup/Popup.js","components/Game/WinPopup/WinPopup.js","components/Game/StartPopup/StartPopup.js","components/Footer/Footer.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["linkBtn","props","react_default","a","createElement","className","href","address","children","header","LinkBtn","buttonGroup","classText","extraText","scoreList","concat","played","lvlScroe","_ref","gameScore","last","top","actionBtn","pressedClass","isGameVisible","gameLvl","level","disabled","locked","onClick","e","click","title","style","fontSize","description","ArrowBtn","isLocked","direction","lvlGroup","config","lvlGroups","arrowClick","menu","lvlButtonClick","gameProgress","buttonsArray","des","lvl","text","map","button","index","ActionBtn","key","headerText","Fragment","id","ButtonGroup_ButtonGroup","Buttons_ArrowBtn","LvlScore_LvlScore","card","size","isReversed","cardIcon","cardColor","cardClick","containerStyle","width","height","cardStyle","backgroundColor","iconStyle","cardClasses","reverseIcon","GameLives","liveStyle","color","opacity","chances","i","push","Object","objectSpread","Game","state","cardsObj","reversedCards","matchedCouples","clickCounter","isStarted","buttonLocker","actualChances","chanceSize","cardColors","cardSize","randomIcons","cardsIds","newCardsObj","iconsList","toConsumableArray","icons","length","console","log","iconId","Math","floor","random","icon","splice","cardClickHandler","_this","modifiedCardObj","isFailure","lvlRange","endGame","setTimeout","setState","reverseAllCards","startNewGame","prepareNewGame","lvlSize","lvlCols","cols","lvlRows","gameAreaSize","parseInt","lvlChances","startGame","reverseTime","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","nextProps","isLvlSelected","this","isNewGame","_this2","gridStyle","gridTemplateColumns","repeat","cardsGird","cardData","Card_Card","Game_GameLives_GameLives","Component","gamePlaceholder","winPopup","WinPopup","isNewRecord","replayClick","nextLvlClick","cancelClick","StartPopup","TEXTS","lvlText","playClick","footer","App","VERSION","gameState","isWin","gameAreaStyle","gameStarted","lastScore","startedGameHandler","endGameHandler","score","Storage","localStorage","setItem","JSON","stringify","arrowButtonClickHanlder","replyClickHandler","cancelClickHandler","lvlButtonClickHanlder","playButtonClickHandler","window","innerHeight","innerWidth","getItem","savedProgress","savedGameScore","parse","clear","gameContent","gameInfo","containers_Game_Game","Popup_Popup","Game_WinPopup_WinPopup","Placeholder_Placeholder","Game_StartPopup_StartPopup","Header_Header","Menu_Menu","dir","Footer_Footer","Boolean","location","hostname","match","ReactDOM","render","containers_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.36332979.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Buttons.scss'\r\n\r\nconst linkBtn = (props) => {\r\n    return (\r\n        <div className=\"Button\"><a href={props.address}><div className=\"header-btn\">{props.children}</div></a></div>\r\n    )\r\n}\r\n\r\nexport default linkBtn","import React from 'react';\r\nimport './Header.scss';\r\nimport LinkBtn from '../Buttons/LinkBtn';\r\n\r\nconst header = () => {\r\n    return (\r\n        <div className=\"Header\">\r\n            <h1>Memory game</h1>\r\n            <h2>with Font Awesome</h2>\r\n            <LinkBtn address='#Menu'><i className=\"far fa-play-circle\"></i> Start fun!</LinkBtn>\r\n            <div className=\"scale\"><a className=\"link\" href=\"https://fontawesome.com\">Learn more</a></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default header","import React from 'react';\r\nimport './ButtonGroup.scss'\r\n\r\nconst buttonGroup = (props) => {\r\n    let classText = \"ButtonGroup\";\r\n    let extraText = null;\r\n    if (props.scoreList) {\r\n        classText+=\" scoreList\";\r\n        extraText = <h3>{`Games played: ${props.played}`}</h3>\r\n    }\r\n\r\n    return (\r\n        <div className={classText}>\r\n            <h3>{props.header}</h3>\r\n            <div className=\"Buttons-row\">{props.children}</div>\r\n            {extraText}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default buttonGroup","import React from 'react';\r\nimport './LvlScore.scss'\r\n\r\nconst lvlScroe = ({ gameScore }) => {\r\n\r\n    return (\r\n        <div className=\"LvlScore\">\r\n            <p>Last: </p><p><b>{gameScore.last}</b></p>\r\n            <p>Top: </p><p><b>{gameScore.top}</b></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default lvlScroe;","import React from 'react';\r\nimport './Buttons.scss'\r\n\r\nconst actionBtn = (props) => {\r\n\r\n    let outputText = () => {\r\n        if (!props.locked) {\r\n            return (\r\n                <div className=\"ScrollableContent\">\r\n                    <span>{props.children}</span>\r\n                    <span style={{ fontSize: \"16px\" }}>{props.description}</span>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"Locked\">\r\n                    <i className=\"fas fa-lock\"></i>\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    let pressedClass = '';\r\n    if (props.isGameVisible && props.gameLvl === props.level) {\r\n        pressedClass = \"buttonPressed\";\r\n    }\r\n\r\n    return (\r\n        <button className={\"ActionButton \" + pressedClass} disabled={props.locked} onClick={(e) => { props.click(props.level, e)}} title={props.title}>\r\n            <a href={\"#Game\"}>{outputText()}</a>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default actionBtn;\r\n","import React from 'react'\r\nimport './Buttons.scss'\r\nimport config from '../../config/config.json';\r\n\r\nconst ArrowBtn = (props) => {\r\n    let isLocked = false;\r\n    \r\n    if (props.direction === 'left' && props.lvlGroup === 0) {\r\n        isLocked = true;\r\n    }\r\n    if (props.direction === 'right' && props.lvlGroup === config.lvlGroups-1) {\r\n        isLocked = true;\r\n    }\r\n\r\n    return (\r\n        <button className=\"ArrowBtn\" disabled={isLocked} onClick={(e) => { props.arrowClick(props.direction, e) }} >\r\n            <i className={\"fas fa-caret-\"+props.direction}></i>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ArrowBtn\r\n","import React from 'react';\r\nimport './Menu.scss'\r\nimport ButtonGroup from './ButtonGroup/ButtonGroup';\r\nimport LvlScore from './LvlScore/LvlScore';\r\nimport ActionButton from '../Buttons/ActionBtn';\r\nimport ArrowBtn from '../Buttons/ArrowBtn';\r\n\r\nconst menu = ({ lvlButtonClick, gameScore, gameProgress, gameLvl, lvlGroup, isGameVisible, arrowClick }) => {\r\n    const easyLvlBtns = [{ des: \"Easy\", lvl: 0, text: \"1\" }, { des: \"Medium\", lvl: 1, text: \"2\" }, { des: \"Hard\", lvl: 2, text: \"3\" }];\r\n    const hardLvlBtns = [{ des: \"Brutal\", lvl: 3, text: \"4\" }, { des: \"Nightmare\", lvl: 4, text: \"5\" }, { des: \"Hell\", lvl: 5, text: \"6\" }];\r\n    let buttonsData = lvlGroup===0 ? easyLvlBtns : hardLvlBtns;\r\n    const buttonsArray = buttonsData.map((button, index) => {\r\n        return (\r\n            <ActionButton\r\n                key={index}\r\n                description={button.des}\r\n                click={lvlButtonClick}\r\n                gameLvl={gameLvl}\r\n                isGameVisible={isGameVisible}\r\n                level={button.lvl}\r\n                locked={button.lvl <= gameProgress ? false : true}>\r\n                {button.text}\r\n            </ActionButton>\r\n        )\r\n    })\r\n    let headerText = <>Your score (clicks)</>\r\n    if (gameLvl >= 3) {\r\n        headerText = <>Your score (matches)</>\r\n    }\r\n\r\n    return (\r\n        <div id=\"Menu\" className=\"Menu\">\r\n            <div className=\"wrapper\">\r\n                <ButtonGroup header=\"Choose level\">\r\n                    <ArrowBtn direction=\"left\" lvlGroup={lvlGroup} arrowClick={arrowClick}/>\r\n                    {buttonsArray}\r\n                    <ArrowBtn direction=\"right\" lvlGroup={lvlGroup} arrowClick={arrowClick} />\r\n                </ButtonGroup >\r\n                <ButtonGroup header={headerText} scoreList={true} played={gameScore.played}>\r\n                    <LvlScore gameLvl={gameLvl} gameScore={gameScore} />\r\n                </ButtonGroup>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default menu","import React from 'react';\r\nimport './Card.scss'\r\nimport config from '../../../config/config.json'\r\n\r\nconst card = ({ size, isReversed, cardIcon, cardColor, id, cardClick }) => {\r\n\r\n    const containerStyle = {\r\n        width: size,\r\n        height: size,\r\n    };\r\n    const cardStyle = {\r\n        backgroundColor: cardColor\r\n    };\r\n\r\n    const iconStyle = {\r\n        fontSize: 0.55 * size\r\n    };\r\n\r\n    let cardClasses = \"Card\";\r\n    if (isReversed) {\r\n        cardClasses += \" flipped\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"cardContainer\" style={containerStyle} onClick={(e) => cardClick(id, e)}>\r\n            <div className={cardClasses}>\r\n                <div className=\"front\" style={cardStyle}><i className={\"fas fa-\" + cardIcon} style={iconStyle}></i></div>\r\n                <div className=\"back\" style={cardStyle}><i className={\"fas fa-\" + config.reverseIcon} style={iconStyle}></i></div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default card","import React from 'react';\r\nimport './GameLives.scss';\r\n\r\nconst GameLives = (props) => {\r\n\r\n  const MAXCHANCES = 3;\r\n\r\n  const liveStyle = {\r\n    height: 0.75 * props.size,\r\n    top: -((props.size-0.75 * props.size)/2)-0.75 * props.size,\r\n  }\r\n\r\n  let iconStyle = {\r\n    color: props.color,\r\n    fontSize: 0.75 * props.size,\r\n    opacity: '0'\r\n  }\r\n\r\n  let chances = [];\r\n  for (let i=0; i < MAXCHANCES; i++ ) {\r\n    (MAXCHANCES-i <= props.chances) ?  iconStyle.opacity = '1' : iconStyle.opacity = '0';\r\n    chances.push(<i key={i} className=\"fas fa-heart\" style={{...iconStyle}}></i>)\r\n  }\r\n  \r\n  return (\r\n    <div className={\"GameLives\"} style={liveStyle}>\r\n      {chances}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameLives\r\n","import React, { Component } from 'react';\r\nimport './Game.scss'\r\nimport Card from \"../../components/Game/Card/Card\";\r\nimport GameLives from '../../components/Game/GameLives/GameLives';\r\nimport config from '../../config/config.json';\r\n\r\nclass Game extends Component {\r\n    state = {\r\n        cardsObj: [],\r\n        reversedCards: [],\r\n        matchedCouples: 0,\r\n        clickCounter: 0,\r\n        isStarted: false\r\n    }\r\n\r\n    buttonLocker = false;\r\n    actualChances = -1;\r\n    chanceSize = 0;\r\n    cardColor = config.cardColors[0];\r\n    cardSize = 200; //random value\r\n\r\n    randomIcons = ({ cardsIds, newCardsObj }) => {\r\n\r\n        let index;\r\n        let iconsList = [...config.icons]; //Copy of default icons set\r\n        while (cardsIds.length > 0) {\r\n            console.log('randomize')\r\n            const iconId = Math.floor(Math.random() * iconsList.length);\r\n            const icon = iconsList.splice(iconId, 1)[0];\r\n\r\n            index = cardsIds.splice(Math.floor(Math.random() * cardsIds.length), 1)[0];\r\n            // select index for 1st card of couple with same icon and removes it from list\r\n            newCardsObj[index] = {\r\n                icon: icon,\r\n                isReversed: false,\r\n            };\r\n            index = cardsIds.splice(Math.floor(Math.random() * cardsIds.length), 1);\r\n            // select index for 2nd card of couple with same icon and removes it from list\r\n            newCardsObj[index] = {\r\n                icon: icon,\r\n                isReversed: false,\r\n            };\r\n        }\r\n        return newCardsObj;\r\n    }\r\n\r\n    cardClickHandler = (index) => {\r\n        if (!this.buttonLocker && this.state.cardsObj[index].isReversed) {\r\n            this.buttonLocker = true;\r\n\r\n            let reversedCards = [...this.state.reversedCards];\r\n            let modifiedCardObj = [...this.state.cardsObj];\r\n            let matchedCouples = this.state.matchedCouples;\r\n            let clickCounter = this.state.clickCounter;\r\n            let isFailure = false;\r\n            modifiedCardObj[index].isReversed = false;\r\n            clickCounter++;\r\n\r\n            if (reversedCards.length === 0) {\r\n                reversedCards[0] = index;\r\n            }\r\n            else {\r\n                reversedCards[1] = index;\r\n                // checks if there is a match\r\n                if (modifiedCardObj[index].icon === modifiedCardObj[reversedCards[0]].icon) {\r\n                    console.log(\"paired\")\r\n                    reversedCards = [];\r\n                    matchedCouples++;\r\n                    // Checks if we won the game!\r\n                    if (matchedCouples === config.lvlRange[this.props.lvl].size / 2) {\r\n                        if (this.props.lvl < 3) {\r\n                            this.props.endGame(clickCounter);\r\n                        }\r\n                        else {\r\n                            this.props.endGame(matchedCouples);\r\n                        }\r\n                    }\r\n                }\r\n                // in case of fail\r\n                else {\r\n                    this.actualChances--;\r\n                    // if not hard modes or still chance \r\n                    if (this.props.lvl < 3 || this.actualChances > 0) {\r\n                        setTimeout(() => {\r\n                            modifiedCardObj[reversedCards[0]].isReversed = true;\r\n                            modifiedCardObj[reversedCards[1]].isReversed = true;\r\n                            reversedCards = [];\r\n                            this.setState({ cardsObj: modifiedCardObj, reversedCards: reversedCards })\r\n                            this.buttonLocker = false;\r\n                        }, 600);\r\n                    }\r\n                    else {\r\n                        this.props.endGame(matchedCouples);\r\n                        isFailure = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.setState({ cardsObj: modifiedCardObj, reversedCards: reversedCards, matchedCouples: matchedCouples, clickCounter: clickCounter }, () => {\r\n                // when failed in hard modes\r\n                if (isFailure) {\r\n                    setTimeout(() => {\r\n                        this.reverseAllCards();\r\n                        setTimeout(() => {\r\n                            this.startNewGame(this.props.lvl, false);\r\n                            this.buttonLocker = false;\r\n                        }, 600);\r\n                    }, 600);\r\n                }\r\n                else if (reversedCards.length < 2) {\r\n                    this.buttonLocker = false;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    prepareNewGame = (lvl) => {\r\n        const lvlSize = config.lvlRange[lvl].size;\r\n        const lvlCols = config.lvlRange[lvl].cols;\r\n        const lvlRows = lvlSize / lvlCols;\r\n\r\n        this.cardColor = config.cardColors[Math.floor(Math.random() * config.cardColors.length)];\r\n        this.cardSize = (this.props.gameAreaSize.width - 10 * (parseInt(lvlCols) - 1)) / parseInt(lvlCols);\r\n        this.chanceSize = (this.props.gameAreaSize.height - (lvlRows * this.cardSize + 10 * (lvlRows - 1))) / 2\r\n        console.log(this.chanceSize);\r\n\r\n        let newCardsObj = []; //Object with whole lvl cards data\r\n        let cardsIds = []; //Array of indexes for cards in game\r\n\r\n        this.actualChances = config.lvlChances[lvl];\r\n        for (let i = 0; i < (lvlSize); i++) {\r\n            cardsIds.push(i); // creates array of indexes for set game range\r\n            newCardsObj.push({\r\n                icon: \"\",\r\n                isReversed: true,\r\n            }); // creates a placeholder of cards data\r\n        }\r\n        this.setState({\r\n            cardsObj: newCardsObj,\r\n            clickCounter: 0,\r\n            matchedCouples: 0,\r\n            reversedCards: []\r\n        });\r\n        return ({ cardsIds: cardsIds, newCardsObj: newCardsObj })\r\n    }\r\n\r\n    startNewGame = (lvl) => {\r\n        this.props.startGame();\r\n        const newCardsObj = this.randomIcons(this.prepareNewGame(lvl));\r\n        this.setState({\r\n            cardsObj: newCardsObj,\r\n            clickCounter: 0,\r\n            matchedCouples: 0,\r\n            reversedCards: []\r\n        }, () => {\r\n            setTimeout(() => {\r\n                this.reverseAllCards();\r\n            }, config.reverseTime[lvl])\r\n        });\r\n    }\r\n\r\n    reverseAllCards = () => {\r\n        let modifiedCardObj = [...this.state.cardsObj];\r\n        for (const cardObj of modifiedCardObj) {\r\n            cardObj.isReversed = true;\r\n        }\r\n        this.setState({ cardsObj: modifiedCardObj });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.isLvlSelected) {\r\n            this.prepareNewGame(nextProps.lvl);\r\n        }\r\n        else if (nextProps.isNewGame) {\r\n            this.startNewGame(nextProps.lvl);\r\n        }\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.props.isLvlSelected) {\r\n            this.prepareNewGame(this.props.lvl);\r\n        }\r\n        else if (this.props.isNewGame) {\r\n            this.startNewGame(this.props.lvl);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        const gridStyle = {\r\n            gridTemplateColumns: 'auto '.repeat(config.lvlRange[this.props.lvl].cols),\r\n        }\r\n\r\n        const cardsGird = this.state.cardsObj.map((cardData, index) => {\r\n            return <Card size={this.cardSize} isReversed={cardData.isReversed} cardIcon={cardData.icon} cardColor={this.cardColor} key={`${this.props.lvl}-${index}`} id={index} cardClick={(key, e) => this.cardClickHandler(key, e)} />\r\n        });\r\n\r\n        return (\r\n            <div className=\"Game\">\r\n                <GameLives chances={this.actualChances} color={this.cardColor} size={this.chanceSize} />\r\n                <div id=\"gameWrapper\" className=\"wrapper\" style={gridStyle}>\r\n                    {cardsGird}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Game","import React from 'react';\r\nimport './Placeholder.scss';\r\n\r\n\r\nconst gamePlaceholder = () => {\r\n\r\n    return (\r\n        <div id=\"Game\" className=\"GamePlaceholder\" >\r\n            <p className=\"main\">Choose level to start a game!</p>\r\n            <p>Win a given level to unlock the next one.</p>\r\n            <p>Pass three normal levels to get to <b>harder</b> ones, <br />where every mistake counts.</p>\r\n            <p>Good luck, have fun! <i className=\"far fa-smile-wink\"></i></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default gamePlaceholder","import React from 'react';\r\nimport './Popup.scss'\r\n\r\n\r\nconst winPopup = (props) => {\r\n\r\n    return (\r\n        <div className=\"Popup\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default winPopup","import React from 'react'\r\nimport ActionButton from '../../Buttons/ActionBtn';\r\n\r\nconst WinPopup = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"WinPopup\">\r\n                <p>Winner!</p>\r\n                <p>{`Score: ${props.clickCounter} clicks`}</p>\r\n                {props.isNewRecord ? <p><strong>New Record!</strong></p> : null\r\n                }\r\n            </div>\r\n            <div className=\"winButtons\">\r\n                <ActionButton\r\n                    description=\"Reply\"\r\n                    click={props.replayClick}\r\n                    level=\"0\">\r\n                    <i className=\"fas fa-undo-alt\"></i>\r\n                </ActionButton>\r\n                {/* don't show next level button when it's last level */}\r\n                {props.lvl < 5 ? (\r\n                    <ActionButton\r\n                        description=\"Next level\"\r\n                        click={props.nextLvlClick}\r\n                        level={props.lvl + 1}>\r\n                        <i className=\"fas fa-arrow-right\"></i>\r\n                    </ActionButton>\r\n                ) : null}\r\n                <ActionButton\r\n                    description=\"Cancel\"\r\n                    click={props.cancelClick}\r\n                    level=\"0\">\r\n                    <i className=\"fas fa-times\"></i>\r\n                </ActionButton>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WinPopup\r\n","import React from 'react'\r\nimport ActionButton from '../../Buttons/ActionBtn';\r\nimport './StartPopup.scss'\r\n\r\nconst StartPopup = (props) => {\r\n\r\n   const TEXTS = [\r\n        <>Even baby <i className=\"fas fa-baby\"></i> can make it<br/>Find all pairs quickly and move forward!</>,\r\n        <>Strain your brain <i className=\"fas fa-brain\"></i><br/>It's more difficult, but won't hurt you!</>,\r\n        <>It's pretty hard level<br/>Need someone to help you search <i className=\"fas fa-search\"></i>?</>,\r\n        <>This is where the fun beggins!<br/>No mistakes allowed <i className=\"fas fa-heart-broken\"></i></>,\r\n        <>It might be nightmare <i className=\"fas fa-sad-cry\"></i><br/>But I'm not evil: 1 mistake allowed <i className=\"fas fa-heart\"></i></>,\r\n        <>Are you a cheater or a mastermind?<br/>Good luck anyway: 2 mistakes allowed <i className=\"fas fa-heart\"></i><i className=\"fas fa-heart\"></i>.</>\r\n    ]\r\n    const lvlText = <p className='lvlText'>{TEXTS[props.lvl]}</p>\r\n    return (\r\n        <>\r\n            <div className=\"StartPopup\">\r\n                <p className='startText'>START GAME</p>\r\n                {lvlText}\r\n            </div>\r\n            <div className=\"winButtons\">\r\n                <ActionButton\r\n                    description=\"Play\"\r\n                    click={props.playClick}\r\n                    level=\"0\">\r\n                    <i className=\"far fa-play-circle\"></i>\r\n                </ActionButton>\r\n                <ActionButton\r\n                    description=\"Cancel\"\r\n                    click={props.cancelClick}\r\n                    level=\"0\">\r\n                    <i className=\"fas fa-times\"></i>\r\n                </ActionButton>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StartPopup\r\n","import React from 'react';\r\nimport './Footer.scss'\r\n\r\nconst footer = (props) => {\r\n\r\n    return (\r\n        <div className=\"Footer\">\r\n            <p>React practice game project, by JZ.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default footer","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport Header from '../../components/Header/Header';\r\nimport Menu from '../../components/Menu/Menu';\r\nimport Game from '../Game/Game';\r\nimport GamePlaceholder from '../../components/Game/Placeholder/Placeholder';\r\nimport Popup from \"../../components/Game/Popup/Popup\";\r\nimport WinPopup from \"../../components/Game/WinPopup/WinPopup\";\r\nimport StartPopup from \"../../components/Game/StartPopup/StartPopup\";\r\nimport Footer from '../../components/Footer/Footer';\r\n\r\nimport config from '../../config/config.json';\r\n\r\nclass App extends Component {\r\n  VERSION = '1.1';\r\n  state = {\r\n    gameState: false,\r\n    lvl: 0,\r\n    lvlGroup: 0,\r\n    isNewRecord: false,\r\n    isWin: false,\r\n    gameScore: [{ last: 0, top: 0, played: 0 }, { last: 0, top: 0, played: 0 }, { last: 0, top: 0, played: 0 }, { last: 0, top: 0, played: 0 }, { last: 0, top: 0, played: 0 }, { last: 0, top: 0, played: 0 },],\r\n    gameProgress: 0,\r\n    gameAreaSize: { width: 0, height: 0 },\r\n    gameAreaStyle: {}\r\n  }\r\n\r\n  isGameVisible = false;\r\n  gameStarted = false;\r\n  isNewGame = false;\r\n  isLvlSelected = false;\r\n  lastScore = 0;\r\n\r\n  startedGameHandler = () => {\r\n    this.isNewGame = false;\r\n  }\r\n\r\n  endGameHandler = (score) => {\r\n    this.lastScore = score;\r\n    let gameScore = [...this.state.gameScore];\r\n    let gameProgress = this.state.gameProgress;\r\n    let isNewRecord = false;\r\n    let isWin = false\r\n    gameScore[this.state.lvl].played++;\r\n    gameScore[this.state.lvl].last = score\r\n    // new Record\r\n    if (this.state.lvl < 3 && gameScore[this.state.lvl].top > 0 && score < gameScore[this.state.lvl].top) {\r\n      gameScore[this.state.lvl].top = score;\r\n      isNewRecord = true;\r\n    }\r\n    else if (gameScore[this.state.lvl].top === 0) {\r\n      gameScore[this.state.lvl].top = score;\r\n      isNewRecord = true;\r\n    }\r\n    else if (this.state.lvl >= 3 && gameScore[this.state.lvl].top > 0 && score > gameScore[this.state.lvl].top) {\r\n      gameScore[this.state.lvl].top = score;\r\n      isNewRecord = true;\r\n    }\r\n    if (this.state.lvl < 3) {\r\n      isWin = true;\r\n    }\r\n    else if (score === config.lvlRange[this.state.lvl].size/2) {\r\n      isWin = true;\r\n    }\r\n    // progress made\r\n    if (isWin && gameProgress < 6 && this.state.lvl === gameProgress) {\r\n      gameProgress++;\r\n    }\r\n    // save progress\r\n    this.setState({ gameScore: gameScore, gameProgress: gameProgress, isNewRecord: isNewRecord, isWin: isWin })\r\n    if (typeof (Storage) !== \"undefined\") {\r\n      localStorage.setItem('gameScore', JSON.stringify(this.state.gameScore));\r\n      localStorage.setItem('gameProgress', gameProgress);\r\n    }\r\n  }\r\n\r\n  arrowButtonClickHanlder = (direction) => {\r\n    let lvlGroup = this.state.lvlGroup;\r\n    if (direction === 'left' && lvlGroup > 0) {\r\n      lvlGroup--;\r\n    }\r\n    else if (direction === 'right' && lvlGroup < 1) {\r\n      lvlGroup++;\r\n    }\r\n    this.setState({ lvlGroup: lvlGroup });\r\n  }\r\n\r\n  replyClickHandler = () => {\r\n    const gameState = this.state.gameState;\r\n    this.setState({ gameState: !gameState, isWin: false });\r\n    this.isNewGame = true;\r\n  }\r\n\r\n  cancelClickHandler = () => {\r\n    const gameState = this.state.gameState;\r\n    this.setState({ gameState: !gameState });\r\n    this.isGameVisible = false;\r\n    this.isLvlSelected = false;\r\n  }\r\n\r\n  lvlButtonClickHanlder = (lvl) => {\r\n\r\n    if (!this.isGameVisible || lvl !== this.state.lvl) {\r\n      let lvlGroup = this.state.lvlGroup;\r\n      if (lvl > 2 && lvlGroup === 0) {\r\n        lvlGroup++;\r\n      }\r\n      this.isGameVisible = true;\r\n      this.isLvlSelected = true;\r\n      this.setState({ lvl: lvl, lvlGroup:lvlGroup });\r\n    }\r\n  }\r\n\r\n  playButtonClickHandler = () => {\r\n    this.isLvlSelected = false;\r\n    this.isNewGame = true;\r\n    this.setState({ isWin: false })\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    let height = window.innerHeight - 150 - 32;\r\n    let width = height * 1.66;\r\n\r\n    if (window.innerWidth < 768) {\r\n      width = window.innerWidth * 0.96;\r\n      height = width / 1.66;\r\n    }\r\n\r\n    this.setState({\r\n      gameAreaSize: { width: width, height: height },\r\n      gameAreaStyle: {\r\n        height: height + 'px',\r\n      }\r\n    });\r\n    if (typeof (Storage) !== \"undefined\") {\r\n      console.log(localStorage.getItem('version') === this.VERSION);\r\n      if (localStorage.getItem('version') === this.VERSION) {\r\n        const savedProgress = parseInt(localStorage.getItem('gameProgress'));\r\n        const savedGameScore = JSON.parse(localStorage.getItem('gameScore'));\r\n        if (savedProgress && savedGameScore) {\r\n          this.setState({\r\n            gameScore: savedGameScore,\r\n            gameProgress: savedProgress\r\n          })\r\n        }\r\n      }\r\n      else {\r\n        localStorage.clear();\r\n      }\r\n      localStorage.setItem('version', this.VERSION);\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    let gameContent = null;\r\n    let gameInfo = null;\r\n\r\n    if (this.isGameVisible) {\r\n      gameContent =\r\n        <Game isNewGame={this.isNewGame} isLvlSelected={this.isLvlSelected} lvl={this.state.lvl} gameAreaSize={this.state.gameAreaSize} startGame={this.startedGameHandler} endGame={score => this.endGameHandler(score)} />\r\n    }\r\n\r\n    if (this.state.isWin) {\r\n      gameInfo = <Popup>\r\n        <WinPopup isNewRecord={this.state.isNewRecord} clickCounter={this.lastScore} replayClick={this.replyClickHandler} cancelClick={this.cancelClickHandler} lvl={this.state.lvl} nextLvlClick={(lvl, e) => this.lvlButtonClickHanlder(lvl, e)} />\r\n      </Popup>\r\n    }\r\n\r\n    if (!this.isGameVisible) {\r\n      gameInfo = <GamePlaceholder />;\r\n    }\r\n\r\n    if (this.isLvlSelected) {\r\n      gameInfo = <Popup>\r\n        <StartPopup lvl={this.state.lvl} playClick={this.playButtonClickHandler} cancelClick={this.cancelClickHandler} />\r\n      </Popup>\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Menu gameLvl={this.state.lvl} lvlGroup={this.state.lvlGroup} isGameVisible={this.isGameVisible} gameProgress={this.state.gameProgress} lvlButtonClick={(lvl, e) => this.lvlButtonClickHanlder(lvl, e)} gameScore={this.state.gameScore[this.state.lvl]} arrowClick={(dir, e) => this.arrowButtonClickHanlder(dir, e)} />\r\n        <div id=\"Game\" className=\"gameArea\" style={this.state.gameAreaStyle}>\r\n          {gameContent}\r\n          {gameInfo}\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n// {\r\n//   \"size\": 8,\r\n//   \"cols\": 4\r\n// },\r\n// {\r\n//   \"size\": 18,\r\n//   \"cols\": 6\r\n// },\r\n// {\r\n//   \"size\": 32,\r\n//   \"cols\": 8\r\n// },\r\n// {\r\n//   \"size\": 8,\r\n//   \"cols\": 4\r\n// },\r\n// {\r\n//   \"size\": 18,\r\n//   \"cols\": 6\r\n// },\r\n// {\r\n//   \"size\": 32,\r\n//   \"cols\": 8\r\n// }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}