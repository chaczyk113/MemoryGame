{"version":3,"sources":["components/commons/LinkBtn.js","components/Header/Header.js","components/Menu/ButtonGroup.js","components/Menu/LvlScore.js","components/commons/ActionButton.js","components/Menu/Menu.js","components/Game/Card.js","components/Game/Game.js","components/Game/WinPopup.js","components/Game/GamePlaceholder.js","components/Footer/Footer.js","containers/App.js","serviceWorker.js","index.js"],"names":["linkBtn","props","react_default","a","createElement","className","href","address","children","header","LinkBtn","buttonGroup","lvlScroe","_ref","gameScore","concat","last","top","actionButton","disabled","locked","onClick","e","click","level","title","style","fontSize","description","menu","lvlButtonClick","id","Menu_ButtonGroup","ActionButton","class","Menu_LvlScore","card","size","isReversed","cardIcon","isMatched","cardColor","cardClick","containerStyle","width","height","cardStyle","backgroundColor","iconStyle","cardClasses","config","reverseIcon","Game","state","_this2","this","cardsGird","cardsObj","map","cardData","index","Game_Card","cardSize","icon","key","lvl","gridStyle","newGame","display","gridTemplateColumns","repeat","lvlSize","x","gridGap","gameWidth","cardColors","Math","floor","random","length","Component","winPopup","clickCounter","replayClick","cancelClick","gamePlaceholder","placeholderContent","isWin","WinPopup","footer","App","gameStarted","isNewGame","reversedCards","matchedCouples","gameAreaWidth","gameAreaStyle","randomIcons","lvlRangeSize","newCardsObj","cardsIds","iconsList","Object","toConsumableArray","icons","i","push","iconId","splice","winGameHandler","_this","setState","cardClickHandler","modifiedCardObj","lvlRange","console","log","setTimeout","replyClickHandler","startNewGame","cancelClickHandler","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","reverseTime","lvlButtonClickHanlder","window","innerHeight","gameContent","gameInfo","components_Game_Game","GamePlaceholder","Header_Header","Menu_Menu","Footer_Footer","Boolean","location","hostname","match","ReactDOM","render","src_containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.56c9acf0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Buttons.scss'\r\n\r\nconst linkBtn = (props) => {\r\n    return (\r\n        <div className=\"Button\"><a href={props.address}><div className=\"header-btn\">{props.children}</div></a></div>\r\n    )\r\n}\r\n\r\nexport default linkBtn","import React from 'react';\r\nimport './Header.scss';\r\nimport LinkBtn from '../commons/LinkBtn';\r\n\r\nconst header = () => {\r\n    return (\r\n    <div className=\"Header\">\r\n        <h1>Memory game</h1>\r\n        <h2>with Font Awesome</h2>\r\n        <LinkBtn address='#Menu'><i className=\"far fa-play-circle\"></i> Start fun!</LinkBtn>\r\n        <div className=\"scale\"><a className=\"link\" href=\"https://fontawesome.com\">Learn more</a></div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default header","import React from 'react';\r\nimport './ButtonGroup.scss'\r\n\r\nconst buttonGroup = (props) => {\r\n    return (\r\n        <div className=\"ButtonGroup\">\r\n            <h3>{props.header}</h3>\r\n            <div className=\"Buttons-row\">{props.children}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default buttonGroup","import React from 'react';\r\nimport './LvlScore.scss'\r\n\r\nconst lvlScroe = ({ gameScore }) => {\r\n\r\n    return (\r\n        <div className=\"LvlScore\">\r\n            <p>{`Last score: ${gameScore.last}`}</p>\r\n            <p>{`Top score: ${gameScore.top}`}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default lvlScroe;","import React from 'react';\r\nimport './Buttons.scss'\r\n\r\nconst actionButton = (props) => {\r\n\r\n    let outputText = ()=>{\r\n        if (!props.locked){\r\n            return (\r\n            <div className=\"ScrollableContent\">\r\n            <span>{props.children}</span>\r\n            <span style={{fontSize:\"16px\"}}>{props.description}</span>\r\n            </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n            <div className=\"Locked\">\r\n                <i className=\"fas fa-lock\"></i>\r\n            </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    return (\r\n    <button className=\"ActionButton\" disabled={props.locked} onClick={(e)=>{props.click(props.level, e)}} title={props.title}>\r\n        {outputText()}\r\n    </button>\r\n    )\r\n}\r\n\r\nexport default actionButton;\r\n","import React from 'react';\r\nimport './Menu.scss'\r\nimport ButtonGroup from './ButtonGroup';\r\nimport LvlScore from './LvlScore';\r\nimport ActionButton from '../commons/ActionButton';\r\n\r\nconst menu = ({ lvlButtonClick , gameScore}) => {\r\n    return (\r\n        <div id=\"Menu\" className=\"Menu\">\r\n            <div className=\"wrapper\">\r\n                <ButtonGroup header=\"Choose level\">\r\n                    <ActionButton\r\n                        description=\"Easy\"\r\n                        click={lvlButtonClick}\r\n                        level=\"0\">\r\n                        1\r\n                    </ActionButton>\r\n                    <ActionButton\r\n                        description=\"Medium\"\r\n                        click={lvlButtonClick}\r\n                        level=\"1\">\r\n                        2\r\n                    </ActionButton>\r\n                    <ActionButton\r\n                        description=\"Hard\"\r\n                        click={lvlButtonClick}\r\n                        level=\"2\">\r\n                        3\r\n                    </ActionButton>\r\n                    <ActionButton\r\n                        locked=\"true\"\r\n                        description=\"Nightmare\"\r\n                        click={lvlButtonClick}\r\n                        level=\"3\">\r\n                        <i class=\"far fa-dizzy\"></i>\r\n                    </ActionButton>\r\n                </ButtonGroup >\r\n                <ButtonGroup header=\"Your score\">\r\n                    <LvlScore gameScore={gameScore}/>\r\n                </ButtonGroup>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default menu","import React from 'react';\r\nimport './Card.scss'\r\nimport config from '../../config/config.json'\r\n\r\nconst card = ({ size, isReversed, isMatched, cardIcon, cardColor, id, cardClick}) => {\r\n\r\n    const containerStyle = {\r\n        width: size,\r\n        height: size,\r\n    };\r\n    const cardStyle = {\r\n        backgroundColor: cardColor\r\n    };\r\n\r\n    const iconStyle = {\r\n        fontSize: 0.55 * size\r\n    };\r\n\r\n    let cardClasses = \"Card\";\r\n    if (isReversed) {\r\n        cardClasses += \" flipped\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"cardContainer\" style={containerStyle} onClick={(e)=>cardClick(id, e)}>\r\n            <div className={cardClasses}>\r\n                <div className=\"front\" style={cardStyle}><i className={\"fas fa-\" + cardIcon} style={iconStyle}></i></div>\r\n                <div className=\"back\" style={cardStyle}><i className={\"fas fa-\" + config.reverseIcon} style={iconStyle}></i></div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default card","import React, { Component } from 'react';\r\nimport './Game.scss'\r\nimport Card from \"./Card\";\r\nimport config from '../../config/config.json'\r\n\r\nclass Game extends Component {\r\n    state={};\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.newGame) {\r\n            return {\r\n                gridStyle: {\r\n                    height: '100%',\r\n                    width: '100%',\r\n                    display: 'grid',\r\n                    gridTemplateColumns: 'auto '.repeat(props.lvlSize.x),\r\n                    gridGap: '10px'\r\n                },\r\n                cardSize: (props.gameWidth - 10 * (props.lvlSize.x - 1)) / props.lvlSize.x,\r\n                cardColor: config.cardColors[Math.floor(Math.random() * config.cardColors.length)]\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    render() {\r\n        const cardsGird = this.props.cardsObj.map((cardData, index) => {\r\n            return <Card size={this.state.cardSize} isReversed={cardData.isReversed} isMatched={cardData.isMatched} cardIcon={cardData.icon} cardColor={this.state.cardColor} key={`${this.props.lvl}-${index}`} id={index} cardClick={this.props.cardClick} />\r\n        });\r\n        return (\r\n            <div id=\"Game\" className=\"Game\">\r\n                <div className=\"wrapper\" style={this.state.gridStyle}>\r\n                    {cardsGird}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game","import React from 'react';\r\nimport './Game.scss'\r\nimport ActionButton from '../commons/ActionButton';\r\n\r\nconst winPopup = (props) => {\r\n\r\n    return (\r\n        <div className=\"WinPopup\">\r\n            <p>Winner!</p>\r\n            <p>{`You did it in: ${props.clickCounter} clicks!`}</p>\r\n            <div className=\"winButtons\">\r\n            <ActionButton\r\n                description=\"Reply\"\r\n                click={props.replayClick}\r\n                level=\"0\">\r\n                <i className=\"fas fa-undo-alt\"></i>\r\n            </ActionButton>\r\n            <ActionButton\r\n                description=\"Cancel\"\r\n                click={props.cancelClick}\r\n                level=\"0\">\r\n                <i className=\"fas fa-times\"></i>\r\n            </ActionButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default winPopup","import React from 'react';\r\nimport './Game.scss';\r\nimport WinPopup from \"./WinPopup\";\r\n\r\nconst gamePlaceholder = (props) => {\r\n    let placeholderContent;\r\n    if (props.isWin) {\r\n        placeholderContent = <WinPopup clickCounter={props.clickCounter} replayClick={props.replayClick} cancelClick={props.cancelClick} />\r\n    }\r\n    else {\r\n        placeholderContent = (\r\n            <div>\r\n                <p className=\"main\">Choose level to start a game!</p>\r\n                <p>Win a given level to unlock the next one.</p>\r\n                <p>Pass three levels to unlock <b>Nigthmare</b> mode, <br /> where mistakes are not allowed.</p>\r\n                <p>Good luck, have fun! <i className=\"far fa-smile-wink\"></i></p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div id=\"Game\" className=\"GamePlaceholder\" >\r\n            {placeholderContent}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default gamePlaceholder","import React from 'react';\r\nimport './Footer.scss'\r\n\r\nconst footer = (props) => {\r\n\r\n    return (\r\n        <div className=\"Footer\">\r\n            <p>React practice game project, by JZ.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default footer","import React, { Component } from 'react';\nimport './App.scss';\nimport Header from '../components/Header/Header';\nimport Menu from '../components/Menu/Menu';\nimport Game from '../components/Game/Game';\nimport GamePlaceholder from '../components/Game/GamePlaceholder';\nimport Footer from '../components/Footer/Footer';\nimport config from '../config/config.json'\n\n\nclass App extends Component {\n\n  state = {\n    gameStarted: false,\n    cardsObj: [],\n    lvl: 0,\n    isNewGame: false,\n    reversedCards: [],\n    matchedCouples: 0,\n    isWin: false,\n    clickCounter: 0,\n    gameAreaWidth: 0,\n    gameAreaStyle: {},\n    gameScore: [{last: 0, top:0},{last: 0, top:0},{last: 0, top:0},{last: 0, top:0}]\n  }\n\n  randomIcons = (lvlRangeSize) => {\n    let newCardsObj = []; //Object with whole lvl cards data\n    let cardsIds = []; //Array of indexes for cards in game\n    let iconsList = [...config.icons]; //Copy of default icons set\n\n    for (let i = 0; i < (lvlRangeSize); i++) {\n      cardsIds.push(i); // creates array of indexes for set game range\n      newCardsObj.push(i); // creates a placeholder of cards data\n    }\n    let index;\n    while (cardsIds.length > 0) {\n      const iconId = Math.floor(Math.random() * iconsList.length);\n      const icon = iconsList.splice(iconId, 1)[0];\n\n      index = cardsIds.splice(Math.floor(Math.random() * cardsIds.length), 1)[0];\n      // select index for 1st card of couple with same icon and removes it from list\n      newCardsObj[index] = {\n        icon: icon,\n        isReversed: false,\n        isMatched: false\n      };\n\n      index = cardsIds.splice(Math.floor(Math.random() * cardsIds.length), 1);\n      // select index for 2nd card of couple with same icon and removes it from list\n      newCardsObj[index] = {\n        icon: icon,\n        isReversed: false,\n        isMatched: false\n      };\n\n    }\n    return newCardsObj;\n  }\n\n  winGameHandler = (clickCounter) => {\n    let gameScore = [...this.state.gameScore];\n    gameScore[this.state.lvl].last = clickCounter;\n    if (gameScore[this.state.lvl].top > 0 && clickCounter < gameScore[this.state.lvl].top) {\n      gameScore[this.state.lvl].top = clickCounter;\n    }\n    else if (gameScore[this.state.lvl].top === 0) {\n      gameScore[this.state.lvl].top = clickCounter;\n    }\n    this.setState({gameScore:gameScore})\n  }\n\n  cardClickHandler = (index) => {\n\n    if (this.state.cardsObj[index].isReversed) {\n      let reversedCards = [...this.state.reversedCards];\n      let modifiedCardObj = [...this.state.cardsObj];\n      let matchedCouples = this.state.matchedCouples;\n      let isWin = this.state.isWin;\n      let clickCounter = this.state.clickCounter;\n\n      modifiedCardObj[index].isReversed = false;\n      clickCounter++;\n\n      if (reversedCards.length === 0) {\n        reversedCards[0] = index;\n      }\n      else {\n        reversedCards[1] = index;\n        if (modifiedCardObj[index].icon === modifiedCardObj[reversedCards[0]].icon) {\n          modifiedCardObj[index].isMatched = true;\n          modifiedCardObj[reversedCards[0]].isMatched = true;\n          reversedCards = [];\n          matchedCouples++;\n          // Checks if we won the game!\n          if (matchedCouples === config.lvlRange[this.state.lvl].size / 2) {\n            isWin = true;\n            this.winGameHandler(clickCounter);\n            matchedCouples = 0;\n          }\n        }\n        else {\n          console.log(\"fail\")\n          setTimeout(() => {\n            modifiedCardObj[reversedCards[0]].isReversed = true;\n            modifiedCardObj[reversedCards[1]].isReversed = true;\n            reversedCards = [];\n            this.setState({ cardsObj: modifiedCardObj, reversedCards: reversedCards })\n          }, 600)\n        }\n      }\n      this.setState({ cardsObj: modifiedCardObj, reversedCards: reversedCards, isNewGame: false, matchedCouples: matchedCouples, isWin: isWin, clickCounter: clickCounter })\n    }\n  }\n\n  replyClickHandler = () => {\n    this.startNewGame(this.state.lvl);\n  }\n\n  cancelClickHandler = () => {\n    this.setState({ gameStarted: false, isWin: false });\n  }\n\n  startNewGame = (lvl) => {\n    let lvlRangeSize = config.lvlRange[lvl].size;\n    const newCardsObj = this.randomIcons(lvlRangeSize);\n    this.setState({ gameStarted: true, cardsObj: newCardsObj, lvl: lvl, isNewGame: true, isWin: false, clickCounter: 0 });\n    setTimeout(() => {\n      let modifiedCardObj = [...this.state.cardsObj];\n      for (const cardObj of modifiedCardObj) {\n        cardObj.isReversed = true;\n      }\n      this.setState({ cardsObj: modifiedCardObj, isNewGame: false });\n    }, config.reverseTime[lvl])\n  }\n\n  lvlButtonClickHanlder = (lvl) => {\n    if (!this.state.gameStarted || lvl !== this.state.lvl) {\n      this.startNewGame(lvl);\n    }\n  }\n\n  componentDidMount() {\n    const height = window.innerHeight - 150 - 32;\n    const width = height * 1.66;\n    this.setState({\n      gameAreaWidth: width,\n      gameAreaStyle: {\n      height: height + 'px',\n      width: width + 'px',\n    }});\n  }\n\n  render() {\n    let gameContent = null;\n    let gameInfo = null;\n    if (this.state.gameStarted) {\n      gameContent =\n        <Game lvlSize={config.lvlRange[this.state.lvl]} lvl={this.state.lvl} cardsObj={this.state.cardsObj} cardClick={(key, e) => this.cardClickHandler(key, e)} newGame={this.state.isNewGame} gameWidth = {this.state.gameAreaWidth}/>\n    }\n    if (!this.state.gameStarted || this.state.isWin) {\n      gameInfo = <GamePlaceholder isWin={this.state.isWin} clickCounter={this.state.clickCounter} replayClick={this.replyClickHandler} cancelClick={this.cancelClickHandler} />;\n    }\n\n    return (\n      <div className=\"App\">\n        <Header />\n        <Menu lvlButtonClick={(lvl, e) => this.lvlButtonClickHanlder(lvl, e)} gameScore = {this.state.gameScore[this.state.lvl]}/>\n        <div className=\"gameArea\" style={this.state.gameAreaStyle}>\n          {gameContent}\n          {gameInfo}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}