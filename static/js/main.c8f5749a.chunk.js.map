{"version":3,"sources":["components/commons/LinkBtn.js","components/Header/Header.js","components/Menu/ButtonGroup.js","components/Menu/LvlScore.js","components/commons/ActionButton.js","components/Menu/Menu.js","components/Game/Card.js","components/Game/Game.js","components/Game/WinPopup.js","components/Game/GamePlaceholder.js","components/Footer/Footer.js","containers/App.js","serviceWorker.js","index.js"],"names":["linkBtn","props","react_default","a","createElement","className","href","address","children","header","LinkBtn","buttonGroup","lvlScroe","_ref","gameScore","concat","last","top","actionButton","disabled","locked","onClick","e","click","level","title","style","fontSize","description","menu","lvlButtonClick","gameProgress","buttonsArray","des","lvl","text","map","button","index","ActionButton","key","id","Menu_ButtonGroup","Menu_LvlScore","card","size","isReversed","cardIcon","isMatched","cardColor","cardClick","containerStyle","width","height","cardStyle","backgroundColor","iconStyle","cardClasses","config","reverseIcon","Game","state","_this2","this","cardsGird","cardsObj","cardData","Game_Card","cardSize","icon","gridStyle","newGame","display","gridTemplateColumns","repeat","lvlSize","x","gridGap","gameWidth","cardColors","Math","floor","random","length","Component","winPopup","clickCounter","replayClick","nextLvlClick","cancelClick","gamePlaceholder","placeholderContent","isWin","WinPopup","footer","App","gameStarted","isNewGame","reversedCards","matchedCouples","gameAreaWidth","gameAreaStyle","randomIcons","lvlRangeSize","newCardsObj","cardsIds","iconsList","Object","toConsumableArray","icons","i","push","iconId","splice","winGameHandler","_this","setState","Storage","localStorage","setItem","JSON","stringify","cardClickHandler","modifiedCardObj","lvlRange","setTimeout","replyClickHandler","startNewGame","cancelClickHandler","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","reverseTime","lvlButtonClickHanlder","window","innerHeight","savedProgress","getItem","savedGameScore","parse","gameContent","gameInfo","components_Game_Game","GamePlaceholder","Header_Header","Menu_Menu","Footer_Footer","Boolean","location","hostname","match","ReactDOM","render","src_containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c8f5749a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Buttons.scss'\r\n\r\nconst linkBtn = (props) => {\r\n    return (\r\n        <div className=\"Button\"><a href={props.address}><div className=\"header-btn\">{props.children}</div></a></div>\r\n    )\r\n}\r\n\r\nexport default linkBtn","import React from 'react';\r\nimport './Header.scss';\r\nimport LinkBtn from '../commons/LinkBtn';\r\n\r\nconst header = () => {\r\n    return (\r\n    <div className=\"Header\">\r\n        <h1>Memory game</h1>\r\n        <h2>with Font Awesome</h2>\r\n        <LinkBtn address='#Menu'><i className=\"far fa-play-circle\"></i> Start fun!</LinkBtn>\r\n        <div className=\"scale\"><a className=\"link\" href=\"https://fontawesome.com\">Learn more</a></div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default header","import React from 'react';\r\nimport './ButtonGroup.scss'\r\n\r\nconst buttonGroup = (props) => {\r\n    return (\r\n        <div className=\"ButtonGroup\">\r\n            <h3>{props.header}</h3>\r\n            <div className=\"Buttons-row\">{props.children}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default buttonGroup","import React from 'react';\r\nimport './LvlScore.scss'\r\n\r\nconst lvlScroe = ({ gameScore }) => {\r\n\r\n    return (\r\n        <div className=\"LvlScore\">\r\n            <p>{`Last score: ${gameScore.last}`}</p>\r\n            <p>{`Top score: ${gameScore.top}`}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default lvlScroe;","import React from 'react';\r\nimport './Buttons.scss'\r\n\r\nconst actionButton = (props) => {\r\n\r\n    let outputText = ()=>{\r\n        if (!props.locked){\r\n            return (\r\n            <div className=\"ScrollableContent\">\r\n            <span>{props.children}</span>\r\n            <span style={{fontSize:\"16px\"}}>{props.description}</span>\r\n            </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n            <div className=\"Locked\">\r\n                <i className=\"fas fa-lock\"></i>\r\n            </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    return (\r\n    <button className=\"ActionButton\" disabled={props.locked} onClick={(e)=>{props.click(props.level, e)}} title={props.title}>\r\n        {outputText()}\r\n    </button>\r\n    )\r\n}\r\n\r\nexport default actionButton;\r\n","import React from 'react';\r\nimport './Menu.scss'\r\nimport ButtonGroup from './ButtonGroup';\r\nimport LvlScore from './LvlScore';\r\nimport ActionButton from '../commons/ActionButton';\r\n\r\nconst menu = ({ lvlButtonClick, gameScore, gameProgress }) => {\r\n\r\n    const buttonsData = [{ des: \"Easy\", lvl:0, text:\"1\" }, { des: \"Medium\", lvl:1, text:\"2\" }, { des: \"Hard\", lvl:2, text:\"3\" }, { des: \"Nightmare\", lvl:3, text:<i className=\"far fa-dizzy\"></i> }];\r\n    const buttonsArray = buttonsData.map((button, index) => {\r\n        return (\r\n            <ActionButton\r\n                key = {index}\r\n                description={button.des}\r\n                click={lvlButtonClick}\r\n                level={button.lvl}\r\n                locked = {button.lvl <= gameProgress?false:true}>\r\n                {button.text}\r\n             </ActionButton>\r\n        )\r\n    })\r\n    return (\r\n        <div id=\"Menu\" className=\"Menu\">\r\n            <div className=\"wrapper\">\r\n                <ButtonGroup header=\"Choose level\">\r\n                    {buttonsArray}\r\n                </ButtonGroup >\r\n                <ButtonGroup header=\"Your score\">\r\n                    <LvlScore gameScore={gameScore} />\r\n                </ButtonGroup>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default menu","import React from 'react';\r\nimport './Card.scss'\r\nimport config from '../../config/config.json'\r\n\r\nconst card = ({ size, isReversed, isMatched, cardIcon, cardColor, id, cardClick}) => {\r\n\r\n    const containerStyle = {\r\n        width: size,\r\n        height: size,\r\n    };\r\n    const cardStyle = {\r\n        backgroundColor: cardColor\r\n    };\r\n\r\n    const iconStyle = {\r\n        fontSize: 0.55 * size\r\n    };\r\n\r\n    let cardClasses = \"Card\";\r\n    if (isReversed) {\r\n        cardClasses += \" flipped\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"cardContainer\" style={containerStyle} onClick={(e)=>cardClick(id, e)}>\r\n            <div className={cardClasses}>\r\n                <div className=\"front\" style={cardStyle}><i className={\"fas fa-\" + cardIcon} style={iconStyle}></i></div>\r\n                <div className=\"back\" style={cardStyle}><i className={\"fas fa-\" + config.reverseIcon} style={iconStyle}></i></div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default card","import React, { Component } from 'react';\r\nimport './Game.scss'\r\nimport Card from \"./Card\";\r\nimport config from '../../config/config.json'\r\n\r\nclass Game extends Component {\r\n    state={};\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.newGame) {\r\n            return {\r\n                gridStyle: {\r\n                    height: '100%',\r\n                    width: '100%',\r\n                    display: 'grid',\r\n                    gridTemplateColumns: 'auto '.repeat(props.lvlSize.x),\r\n                    gridGap: '10px'\r\n                },\r\n                cardSize: (props.gameWidth - 10 * (props.lvlSize.x - 1)) / props.lvlSize.x,\r\n                cardColor: config.cardColors[Math.floor(Math.random() * config.cardColors.length)]\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    render() {\r\n        const cardsGird = this.props.cardsObj.map((cardData, index) => {\r\n            return <Card size={this.state.cardSize} isReversed={cardData.isReversed} isMatched={cardData.isMatched} cardIcon={cardData.icon} cardColor={this.state.cardColor} key={`${this.props.lvl}-${index}`} id={index} cardClick={this.props.cardClick} />\r\n        });\r\n        return (\r\n            <div id=\"Game\" className=\"Game\">\r\n                <div className=\"wrapper\" style={this.state.gridStyle}>\r\n                    {cardsGird}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game","import React from 'react';\r\nimport './Game.scss'\r\nimport ActionButton from '../commons/ActionButton';\r\n\r\nconst winPopup = (props) => {\r\n\r\n    return (\r\n        <div className=\"WinPopup\">\r\n            <p>Winner!</p>\r\n            <p>{`You did it in: ${props.clickCounter} clicks!`}</p>\r\n            <div className=\"winButtons\">\r\n                <ActionButton\r\n                    description=\"Reply\"\r\n                    click={props.replayClick}\r\n                    level=\"0\">\r\n                    <i className=\"fas fa-undo-alt\"></i>\r\n                </ActionButton>\r\n                <ActionButton\r\n                    description=\"Next level\"\r\n                    click={props.nextLvlClick}\r\n                    level={props.lvl + 1}>\r\n                    <i className=\"fas fa-arrow-right\"></i>\r\n                </ActionButton>\r\n                <ActionButton\r\n                    description=\"Cancel\"\r\n                    click={props.cancelClick}\r\n                    level=\"0\">\r\n                    <i className=\"fas fa-times\"></i>\r\n                </ActionButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default winPopup","import React from 'react';\r\nimport './Game.scss';\r\nimport WinPopup from \"./WinPopup\";\r\n\r\nconst gamePlaceholder = (props) => {\r\n    let placeholderContent;\r\n    if (props.isWin) {\r\n        placeholderContent = <WinPopup clickCounter={props.clickCounter} replayClick={props.replayClick} cancelClick={props.cancelClick} lvl={props.lvl} nextLvlClick = {props.nextLvlClick}/>\r\n    }\r\n    else {\r\n        placeholderContent = (\r\n            <div>\r\n                <p className=\"main\">Choose level to start a game!</p>\r\n                <p>Win a given level to unlock the next one.</p>\r\n                <p>Pass three levels to unlock <b>Nigthmare</b> mode, <br /> where mistakes are not allowed.</p>\r\n                <p>Good luck, have fun! <i className=\"far fa-smile-wink\"></i></p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div id=\"Game\" className=\"GamePlaceholder\" >\r\n            {placeholderContent}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default gamePlaceholder","import React from 'react';\r\nimport './Footer.scss'\r\n\r\nconst footer = (props) => {\r\n\r\n    return (\r\n        <div className=\"Footer\">\r\n            <p>React practice game project, by JZ.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default footer","import React, { Component } from 'react';\nimport './App.scss';\nimport Header from '../components/Header/Header';\nimport Menu from '../components/Menu/Menu';\nimport Game from '../components/Game/Game';\nimport GamePlaceholder from '../components/Game/GamePlaceholder';\nimport Footer from '../components/Footer/Footer';\nimport config from '../config/config.json'\n\n\nclass App extends Component {\n\n  state = {\n    gameStarted: false,\n    cardsObj: [],\n    lvl: 0,\n    isNewGame: false,\n    reversedCards: [],\n    matchedCouples: 0,\n    isWin: false,\n    clickCounter: 0,\n    gameAreaWidth: 0,\n    gameAreaStyle: {},\n    gameScore: [{ last: 0, top: 0 }, { last: 0, top: 0 }, { last: 0, top: 0 }, { last: 0, top: 0 }],\n    gameProgress: 0\n  }\n\n  randomIcons = (lvlRangeSize) => {\n    let newCardsObj = []; //Object with whole lvl cards data\n    let cardsIds = []; //Array of indexes for cards in game\n    let iconsList = [...config.icons]; //Copy of default icons set\n\n    for (let i = 0; i < (lvlRangeSize); i++) {\n      cardsIds.push(i); // creates array of indexes for set game range\n      newCardsObj.push(i); // creates a placeholder of cards data\n    }\n    let index;\n    while (cardsIds.length > 0) {\n      const iconId = Math.floor(Math.random() * iconsList.length);\n      const icon = iconsList.splice(iconId, 1)[0];\n\n      index = cardsIds.splice(Math.floor(Math.random() * cardsIds.length), 1)[0];\n      // select index for 1st card of couple with same icon and removes it from list\n      newCardsObj[index] = {\n        icon: icon,\n        isReversed: false,\n        isMatched: false\n      };\n\n      index = cardsIds.splice(Math.floor(Math.random() * cardsIds.length), 1);\n      // select index for 2nd card of couple with same icon and removes it from list\n      newCardsObj[index] = {\n        icon: icon,\n        isReversed: false,\n        isMatched: false\n      };\n\n    }\n    return newCardsObj;\n  }\n\n  winGameHandler = (clickCounter) => {\n    let gameScore = [...this.state.gameScore];\n    let gameProgress = this.state.gameProgress;\n    gameScore[this.state.lvl].last = clickCounter;\n    if (gameScore[this.state.lvl].top > 0 && clickCounter < gameScore[this.state.lvl].top) {\n      gameScore[this.state.lvl].top = clickCounter;\n    }\n    else if (gameScore[this.state.lvl].top === 0) {\n      gameScore[this.state.lvl].top = clickCounter;\n    }\n    if (gameProgress < 4 && this.state.lvl === gameProgress) {\n      gameProgress ++;\n    }\n    this.setState({ gameScore: gameScore, gameProgress:gameProgress })\n    if (typeof(Storage) !== \"undefined\") {\n      localStorage.setItem('gameScore', JSON.stringify(this.state.gameScore));\n      localStorage.setItem('gameProgress', gameProgress);\n    }\n  }\n\n  cardClickHandler = (index) => {\n\n    if (this.state.cardsObj[index].isReversed) {\n      let reversedCards = [...this.state.reversedCards];\n      let modifiedCardObj = [...this.state.cardsObj];\n      let matchedCouples = this.state.matchedCouples;\n      let isWin = this.state.isWin;\n      let clickCounter = this.state.clickCounter;\n\n      modifiedCardObj[index].isReversed = false;\n      clickCounter++;\n\n      if (reversedCards.length === 0) {\n        reversedCards[0] = index;\n      }\n      else {\n        reversedCards[1] = index;\n        if (modifiedCardObj[index].icon === modifiedCardObj[reversedCards[0]].icon) {\n          modifiedCardObj[index].isMatched = true;\n          modifiedCardObj[reversedCards[0]].isMatched = true;\n          reversedCards = [];\n          matchedCouples++;\n          // Checks if we won the game!\n          if (matchedCouples === config.lvlRange[this.state.lvl].size / 2) {\n            isWin = true;\n            this.winGameHandler(clickCounter);\n            matchedCouples = 0;\n          }\n        }\n        else {\n          setTimeout(() => {\n            modifiedCardObj[reversedCards[0]].isReversed = true;\n            modifiedCardObj[reversedCards[1]].isReversed = true;\n            reversedCards = [];\n            this.setState({ cardsObj: modifiedCardObj, reversedCards: reversedCards })\n          }, 600)\n        }\n      }\n      this.setState({ cardsObj: modifiedCardObj, reversedCards: reversedCards, isNewGame: false, matchedCouples: matchedCouples, isWin: isWin, clickCounter: clickCounter })\n    }\n  }\n\n  replyClickHandler = () => {\n    this.startNewGame(this.state.lvl);\n  }\n\n  cancelClickHandler = () => {\n    this.setState({ gameStarted: false, isWin: false });\n  }\n\n  startNewGame = (lvl) => {\n    let lvlRangeSize = config.lvlRange[lvl].size;\n    const newCardsObj = this.randomIcons(lvlRangeSize);\n    this.setState({ gameStarted: true, cardsObj: newCardsObj, lvl: lvl, isNewGame: true, isWin: false, clickCounter: 0 });\n    setTimeout(() => {\n      let modifiedCardObj = [...this.state.cardsObj];\n      for (const cardObj of modifiedCardObj) {\n        cardObj.isReversed = true;\n      }\n      this.setState({ cardsObj: modifiedCardObj, isNewGame: false });\n    }, config.reverseTime[lvl])\n  }\n\n  lvlButtonClickHanlder = (lvl) => {\n    if (!this.state.gameStarted || lvl !== this.state.lvl) {\n      this.startNewGame(lvl);\n    }\n  }\n\n  componentDidMount() {\n    const height = window.innerHeight - 150 - 32;\n    const width = height * 1.66;\n    this.setState({\n      gameAreaWidth: width,\n      gameAreaStyle: {\n        height: height + 'px',\n        width: width + 'px',\n      }\n    });\n    const savedProgress = localStorage.getItem('gameProgress');\n    const savedGameScore = JSON.parse(localStorage.getItem('gameScore'));\n    if (savedProgress && savedGameScore) {\n      this.setState({\n        gameScore: savedGameScore,\n        gameProgress: savedProgress})\n    }\n  }\n\n  render() {\n    let gameContent = null;\n    let gameInfo = null;\n    if (this.state.gameStarted) {\n      gameContent =\n        <Game lvlSize={config.lvlRange[this.state.lvl]} lvl={this.state.lvl} cardsObj={this.state.cardsObj} cardClick={(key, e) => this.cardClickHandler(key, e)} newGame={this.state.isNewGame} gameWidth={this.state.gameAreaWidth} />\n    }\n    if (!this.state.gameStarted || this.state.isWin) {\n      gameInfo = <GamePlaceholder isWin={this.state.isWin} clickCounter={this.state.clickCounter} replayClick={this.replyClickHandler} cancelClick={this.cancelClickHandler} lvl = {this.state.lvl} nextLvlClick={(lvl, e) => this.lvlButtonClickHanlder(lvl, e)}/>;\n    }\n\n    return (\n      <div className=\"App\">\n        <Header />\n        <Menu gameProgress={this.state.gameProgress} lvlButtonClick={(lvl, e) => this.lvlButtonClickHanlder(lvl, e)} gameScore={this.state.gameScore[this.state.lvl]} />\n        <div className=\"gameArea\" style={this.state.gameAreaStyle}>\n          {gameContent}\n          {gameInfo}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}